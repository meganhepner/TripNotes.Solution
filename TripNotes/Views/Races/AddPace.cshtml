@model TripNotes.Models.Race

@{
  Layout = "_Layout";
}

<h1>Add Pace<h1>
<h3>@Html.Label("Race Date "): @Html.DisplayFor(model => model.RaceDate)</h3>
<h3>@Html.DisplayFor(model => model.RaceLength)</h3>
    @Html.HiddenFor(model => model.RaceLength, new { @class="raceLength" })
<h3>@Html.DisplayFor(model => model.RaceClass)</h3>
<h3>@Html.DisplayFor(model => model.RaceNotes)</h3>


  @if(@Model.Horses.Count == 0)
{
  <p>This race has no horses assigned to it</p>
}
else
{
  <h2>Horses :</h2>
  <ul>
  @using(Html.BeginForm()) 
    {
      <label for="firstFraction">First Fraction Split</label>
      <input type="number" step="0.1" name="firstFraction" class="firstFraction"><br>
      <label for="secondFraction">Second Fraction Split</label>
      <input type="number" step="0.1" name="secondFraction" class="secondFraction"><br>
      <label for="thirdFraction">Third Fraction Split</label>
      <input type="number" step="0.1" name="thirdFraction" class="thirdFraction"><br>
      @foreach(var join in Model.Horses)
      { 
      <div class ="BL">
        @Html.Hidden("joinId", @join.HorseRaceId, new { @class="joinId" })

        <li>@join.Horse.HorseName</li>

        <label for="BL1">First Call Beaten Lengths</label>
        <input type="number" step="0.1" name="BL1" class="BL1"><br>
        <p>If horse was in lead at first call, enter 0 for beaten lengths. Otherwise, enter how many lengths the horse was behind the pace horse.</p>
        <label for="BL2">Second Call Beaten Lengths</label>
        <input type="number" step="0.1" name="BL2" class="BL2"><br>
        <label for="BL3">Third Call Beaten Lengths</label>
        <input type="number" step="0.1" name="BL3" class="BL3"><br>
      </div>
      }
      <input type="submit" id="btnSubmit" value="Calculate Pace Figures" /><br>
    }

      <button type="button" id="test">Test</button>

</ul>
}

  @section scripts{
    <script type="text/javascript">
      $(document).ready(function(){

        $('#test').click(function getFPSData() {
          let alldata = [];
              var raceLength = $(".raceLength").val();
              console.log(raceLength);
              var firstFraction = $(".firstFraction").val();
              console.log(firstFraction);
              var secondFraction = $(".secondFraction").val();
              console.log(secondFraction);
              var thirdFraction = $(".thirdFraction").val();
              console.log(thirdFraction);
          $(".BL").each(function() {
              var HorseRaceId = $(this).find(".joinId").val();
              var BL1 = $(this).find(".BL1").val();
              var BL2 = $(this).find(".BL2").val();
              var BL3 = $(this).find(".BL3").val();
         
              debugger
              if (raceLength < 8) {
                let FPS1 = calcSprint1Fr(BL1, firstFraction);
                let FPS2 = calcSprint2Fr(BL1, BL2, secondFraction);
                let FPS3 = calcSprint3Fr(BL2, BL3, thirdFraction, raceLength);
                alldata.push(HorseRaceId, FPS1, FPS2, FPS3);
              } else if (raceLength >= 8) {
                calcRoute1Fr (BL1, firstFraction);
                calcRoute2Fr (BL1, BL2, secondFraction);
                calcRoute3Fr (BL2, BL3, thirdFraction, raceLength);
                alldata.push(HorseRaceId, FPS1, FPS2, FPS3);
                }
            });
          return alldata;
        });

        function calcSprint1Fr(BL1, firstFraction) {
          let FPS = (1320 - (BL1 * 10)) / firstFraction;
          return FPS;
        }

        function calcSprint2Fr(BL1, BL2, secFraction) {
          let change = (BL1 - BL2);
          let FPS = (1320 + (change * 10)) / secFraction;
          return FPS;
        }

        function calcSprint3Fr(BL2, BL3, thirdFraction, raceLength) {
          let change = (BL2 - BL3);
          let distance;
          if (raceLength === 6) {
            distance = 1320;
          } else if (raceLength === 6.5) {
            distance = 1650;
          } else if (raceLength === 7) {
            distance = 1980;
          }
          let FPS = (distance + (change * 10)) / thirdFraction;
          return FPS;
        }

        function calcRoute1Fr(BL1, firstFraction) {
          let FPS = (2640 - (BL1 * 10)) / firstFraction;
          return FPS;
        }

        function calcRoute2Fr(BL1, BL2, secFraction) {
          let change = (BL1 - BL2);
          let FPS = (1320 + (change * 10)) / secFraction;
          return FPS;
        }

        function calcRoute3Fr(BL2, BL3, thirdFraction, raceLength) {
          let change = (BL2 - BL3);
          let distance;
          if (raceLength === 8) {
            distance = 1320;
          } else if (raceLength === 8.18) {
            distance = 1440;
          } else if (raceLength === 8.42) {
            distance = 1520;
          } else if (raceLength === 8.5) {
            distance = 1650;
          } else if (raceLength === 9) {
            distance = 1980;
          } else if (raceLength === 9.5) {
            distance = 2310
          }
          let FPS = (distance + (change * 10)) / thirdFraction;
          return FPS;
        }

  
    });
    </script>
}

   @* $('#test').click(function calcSprint3Fr() {
          var thirdFraction = 32.2;
          var BL2 = 5.25;
          var BL3 = 0;
          raceLength = 6.5;
          let distance;

          if (raceLength === 6) {
            distance = 1320;
          } else if (raceLength === 6.5) {
            distance = 1650;
          } else if (raceLength === 7) {
            distance = 1980;
          }
          let change = (BL2 - BL3);
          let FPS = (distance + (change * 10)) / thirdFraction;
          console.log(FPS);
          return FPS;
        }); *@

              @* $('#btnSubmit').click(function () {
          var pace = (getFPSData());
          var commaSeparatedPace = pace.toString();          
          $.ajax({
              url: '/Races/AddPace',
              type: 'POST',
              data: { horsePace: commaSeparatedPace },
        });
      });  *@