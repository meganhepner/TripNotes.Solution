@model TripNotes.Models.Race
@using System.Collections.Generic;

@{
  Layout = "_Layout";
}

<h2>Add a new Race</h2>

@using(Html.BeginForm())
{
  <div class="row">
    <div class="col-md-5 column">
      @Html.LabelFor(model => model.RaceDate)<br>
    </div>
    <div class="col-md-5 column">
      @Html.TextBoxFor(model => model.RaceDate, new { @type = "date"})<br>
    </div>
  </div>

  <div class="row">
    <div class="col-md-5 column">
        @Html.LabelFor(model => model.RaceLength)<br>
    </div>
    <div class="col-md-5 column">
        @Html.TextBoxFor(model => model.RaceLength, new {@class="form-control", required="required"})<br>
    </div>
  </div>

  <div class="row">
    <div class="col-md-5 column">
        @Html.LabelFor(model => model.RaceClass)<br>
    </div>
    <div class="col-md-5 column">
        @Html.TextBoxFor(model => model.RaceClass, new {@class="form-control", required="required"})<br>
    </div>
  </div>

  <div class="row" id="divToRepeat">
    <div class="col-md-5 column">
      @Html.Label("Add A Horse To This Race: ")<br>
    </div>
    <div class="col-md-5 column">
      @Html.DropDownList("HorseId")<br>
      <input type="button" value="add dynamic" onclick="DynamicText()" />
    </div>
  </div>

  <div class="row">
    <div class="col-md-5 column">
      Find by date: @Html.TextBox("SearchString")
    <br>    
    <input type="submit" value="Add Race" /><br>
    </div>
  </div>
}

<script>
  function DynamicText() {
    var division = document.createElement('DIV');
    division.innerHTML = DynamictextBox("");
    document.getElementById("divToRepeat").appendChild(division);
  }

  function DynamictextBox(value){
    return '<div><input type="text" name="dyntxt" /><input type="button" onclick="ReTextBox(this)" value="Remove" /></div>';
  }
  function ReTextBox(div) {
    document.getElementById("divToRepeat").removeChild(div.parentNode.parentNode);
  }
</script> 

<p>@Html.ActionLink("Add new Horse", "Create", "Horses")</p> 
